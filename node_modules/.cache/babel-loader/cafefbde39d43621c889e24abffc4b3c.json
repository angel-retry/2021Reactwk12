{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\nimport jsonInfo from \"../json/jsonInfo.json\";\nimport products from \"../json/products.json\"; // INITIALIZE FIREBASE\n\nconst firebaseConfig = {\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\n};\nfirebase.initializeApp(firebaseConfig); // REFERENCE PRODUCTS\n\nconst productsCollectionRef = firebase.firestore().collection(\"products\");\nconst productsDocRef = productsCollectionRef.doc(\"json\");\nconst allProductsCollectionRef = productsDocRef.collection(\"allProducts\");\nexport const getProductById = async productId => {\n  // REFERENCE PRODUCTS COLLECTION\n  const doc = await allProductsCollectionRef.doc(productId).get();\n  return doc.data();\n};\nexport const getProducts = async url => {\n  const collection = jsonInfo.find(element => element.url === url);\n  const collectionName = collection.name || \"allProducts\";\n  let jsonProducts = []; // QUERY PRODUCTS\n\n  let querySnapshot;\n  if (collectionName === \"allProducts\") querySnapshot = await allProductsCollectionRef.get();else querySnapshot = await allProductsCollectionRef.where(\"category\", \"==\", collectionName).get();\n  querySnapshot.forEach(doc => {\n    jsonProducts.push(doc.data());\n  });\n  return jsonProducts;\n};\nexport const feedProducts = () => {\n  products.forEach(product => {\n    const docRef = allProductsCollectionRef.doc();\n    const id = docRef.id; // Store Data for Aggregation Queries\n\n    docRef.set({ ...product,\n      id\n    });\n  });\n};\nexport const authenticateAnonymously = () => {\n  return firebase.auth().signInAnonymously();\n};","map":{"version":3,"sources":["F:/NTUE/109-2/進階前端/練習/wk12/src/api/index.js"],"names":["firebase","jsonInfo","products","firebaseConfig","apiKey","process","env","REACT_APP_FIREBASE_API_KEY","authDomain","REACT_APP_FIREBASE_AUTH_DOMAIN","databaseURL","REACT_APP_FIREBASE_DATABASE_URL","projectId","REACT_APP_FIREBASE_PROJECTID","storageBucket","REACT_APP_FIREBASE_STORAGE_BUCKET","messagingSenderId","REACT_APP_FIREBASE_MESSAGING_SENDER_ID","appId","REACT_APP_FIREBASE_APPID","measurementId","REACT_APP_FIREBASE_MEASUREMENTID","initializeApp","productsCollectionRef","firestore","collection","productsDocRef","doc","allProductsCollectionRef","getProductById","productId","get","data","getProducts","url","find","element","collectionName","name","jsonProducts","querySnapshot","where","forEach","push","feedProducts","product","docRef","id","set","authenticateAnonymously","auth","signInAnonymously"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB,C,CAEA;;AACA,MAAMC,cAAc,GAAG;AACrBC,EAAAA,MAAM,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADC;AAErBC,EAAAA,UAAU,EAAEH,OAAO,CAACC,GAAR,CAAYG,8BAFH;AAGrBC,EAAAA,WAAW,EAAEL,OAAO,CAACC,GAAR,CAAYK,+BAHJ;AAIrBC,EAAAA,SAAS,EAAEP,OAAO,CAACC,GAAR,CAAYO,4BAJF;AAKrBC,EAAAA,aAAa,EAAET,OAAO,CAACC,GAAR,CAAYS,iCALN;AAMrBC,EAAAA,iBAAiB,EAAEX,OAAO,CAACC,GAAR,CAAYW,sCANV;AAOrBC,EAAAA,KAAK,EAAEb,OAAO,CAACC,GAAR,CAAYa,wBAPE;AAQrBC,EAAAA,aAAa,EAAEf,OAAO,CAACC,GAAR,CAAYe;AARN,CAAvB;AAWArB,QAAQ,CAACsB,aAAT,CAAuBnB,cAAvB,E,CACA;;AACA,MAAMoB,qBAAqB,GAAGvB,QAAQ,CAACwB,SAAT,GAAqBC,UAArB,CAAgC,UAAhC,CAA9B;AACA,MAAMC,cAAc,GAAGH,qBAAqB,CAACI,GAAtB,CAA0B,MAA1B,CAAvB;AACA,MAAMC,wBAAwB,GAAGF,cAAc,CAACD,UAAf,CAA0B,aAA1B,CAAjC;AAEA,OAAO,MAAMI,cAAc,GAAG,MAAOC,SAAP,IAAqB;AACjD;AACA,QAAMH,GAAG,GAAG,MAAMC,wBAAwB,CAACD,GAAzB,CAA6BG,SAA7B,EAAwCC,GAAxC,EAAlB;AACA,SAAOJ,GAAG,CAACK,IAAJ,EAAP;AACD,CAJM;AAMP,OAAO,MAAMC,WAAW,GAAG,MAAOC,GAAP,IAAe;AACxC,QAAMT,UAAU,GAAGxB,QAAQ,CAACkC,IAAT,CAAcC,OAAO,IAAIA,OAAO,CAACF,GAAR,KAAgBA,GAAzC,CAAnB;AACA,QAAMG,cAAc,GAAGZ,UAAU,CAACa,IAAX,IAAmB,aAA1C;AACA,MAAIC,YAAY,GAAG,EAAnB,CAHwC,CAKxC;;AACA,MAAIC,aAAJ;AACA,MAAIH,cAAc,KAAK,aAAvB,EACEG,aAAa,GAAG,MAAMZ,wBAAwB,CAACG,GAAzB,EAAtB,CADF,KAGES,aAAa,GAAG,MAAMZ,wBAAwB,CAACa,KAAzB,CAA+B,UAA/B,EAA2C,IAA3C,EAAiDJ,cAAjD,EAAiEN,GAAjE,EAAtB;AACFS,EAAAA,aAAa,CAACE,OAAd,CAAuBf,GAAD,IAAS;AAC7BY,IAAAA,YAAY,CAACI,IAAb,CAAkBhB,GAAG,CAACK,IAAJ,EAAlB;AACD,GAFD;AAGA,SAAOO,YAAP;AACD,CAfM;AAiBP,OAAO,MAAMK,YAAY,GAAG,MAAM;AAChC1C,EAAAA,QAAQ,CAACwC,OAAT,CAAkBG,OAAD,IAAa;AAC5B,UAAMC,MAAM,GAAGlB,wBAAwB,CAACD,GAAzB,EAAf;AACA,UAAMoB,EAAE,GAAGD,MAAM,CAACC,EAAlB,CAF4B,CAG5B;;AACAD,IAAAA,MAAM,CAACE,GAAP,CAAW,EACT,GAAGH,OADM;AAETE,MAAAA;AAFS,KAAX;AAID,GARD;AASD,CAVM;AAYP,OAAO,MAAME,uBAAuB,GAAG,MAAM;AAC3C,SAAOjD,QAAQ,CAACkD,IAAT,GAAgBC,iBAAhB,EAAP;AACD,CAFM","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\nimport jsonInfo from \"../json/jsonInfo.json\";\r\nimport products from \"../json/products.json\";\r\n\r\n// INITIALIZE FIREBASE\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APPID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n// REFERENCE PRODUCTS\r\nconst productsCollectionRef = firebase.firestore().collection(\"products\");\r\nconst productsDocRef = productsCollectionRef.doc(\"json\");\r\nconst allProductsCollectionRef = productsDocRef.collection(\"allProducts\");\r\n\r\nexport const getProductById = async (productId) => {\r\n  // REFERENCE PRODUCTS COLLECTION\r\n  const doc = await allProductsCollectionRef.doc(productId).get();\r\n  return doc.data()\r\n}\r\n\r\nexport const getProducts = async (url) => {\r\n  const collection = jsonInfo.find(element => element.url === url);\r\n  const collectionName = collection.name || \"allProducts\";\r\n  let jsonProducts = [];\r\n\r\n  // QUERY PRODUCTS\r\n  let querySnapshot;\r\n  if (collectionName === \"allProducts\")\r\n    querySnapshot = await allProductsCollectionRef.get();\r\n  else\r\n    querySnapshot = await allProductsCollectionRef.where(\"category\", \"==\", collectionName).get();\r\n  querySnapshot.forEach((doc) => {\r\n    jsonProducts.push(doc.data());\r\n  });\r\n  return jsonProducts;\r\n}\r\n\r\nexport const feedProducts = () => {\r\n  products.forEach((product) => {\r\n    const docRef = allProductsCollectionRef.doc();\r\n    const id = docRef.id;\r\n    // Store Data for Aggregation Queries\r\n    docRef.set({\r\n      ...product,\r\n      id\r\n    });\r\n  })\r\n}\r\n\r\nexport const authenticateAnonymously = () => {\r\n  return firebase.auth().signInAnonymously();\r\n};\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}