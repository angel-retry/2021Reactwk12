{"ast":null,"code":"var _jsxFileName = \"F:\\\\NTUE\\\\109-2\\\\\\u9032\\u968E\\u524D\\u7AEF\\\\\\u7DF4\\u7FD2\\\\wk12\\\\src\\\\components\\\\RegisterCard.js\",\n    _s = $RefreshSig$();\n\nimport { Link } from \"react-router-dom\";\nimport React from 'react';\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst formItemLayout = {\n  labelCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 8\n    }\n  },\n  wrapperCol: {\n    xs: {\n      span: 24\n    },\n    sm: {\n      span: 16\n    }\n  }\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0\n    },\n    sm: {\n      span: 24,\n      offset: 0\n    }\n  }\n};\n\nconst RegisterCard = () => {\n  _s();\n\n  const [form] = Form.useForm();\n\n  const onFinish = values => {\n    console.log('Received values of form: ', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, { ...formItemLayout,\n    form: form,\n    name: \"register\",\n    onFinish: onFinish,\n    className: \"register-form\",\n    scrollToFirstError: true,\n    children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"name\",\n      label: \"Your Name\",\n      tooltip: \"What do you want others to call you?\",\n      rules: [{\n        required: true,\n        message: \"Please input your name!\",\n        whitespace: true\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"email\",\n      label: \"E-mail\",\n      rules: [{\n        type: \"email\",\n        message: \"The input is not valid E-mail!\"\n      }, {\n        required: true,\n        message: \"Please input your E-mail!\"\n      }],\n      children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"password\",\n      label: \"Password\",\n      rules: [{\n        required: true,\n        message: \"Please input your password!\"\n      }],\n      hasFeedback: true,\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"rePassword\",\n      label: \"Re-enter Password\",\n      dependencies: [\"password\"],\n      hasFeedback: true,\n      rules: [{\n        required: true,\n        message: \"Please re-enter your password!\"\n      }, ({\n        getFieldValue\n      }) => ({\n        validator(_, value) {\n          if (!value || getFieldValue(\"password\") === value) {\n            return Promise.resolve();\n          }\n\n          return Promise.reject(new Error(\"The two passwords that you entered do not match!\"));\n        }\n\n      })],\n      children: /*#__PURE__*/_jsxDEV(Input.Password, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"agreement\",\n      valuePropName: \"checked\",\n      rules: [{\n        validator: (_, value) => value ? Promise.resolve() : Promise.reject(new Error(\"Should accept agreement\"))\n      }],\n      ...tailFormItemLayout,\n      children: /*#__PURE__*/_jsxDEV(Checkbox, {\n        children: [\"I have read the \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"\",\n          children: \"agreement\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 28\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...tailFormItemLayout,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        className: \"login-form__button\",\n        htmlType: \"submit\",\n        children: \"Create your account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 10\n      }, this), \"Already have an account?\", \" \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login?redirect=shipping\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 10\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 6\n  }, this);\n};\n\n_s(RegisterCard, \"rI7DrJIrFu7YmlGWYiMFTzs8jF0=\", false, function () {\n  return [Form.useForm];\n});\n\n_c = RegisterCard;\nexport default RegisterCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterCard\");","map":{"version":3,"sources":["F:/NTUE/109-2/進階前端/練習/wk12/src/components/RegisterCard.js"],"names":["Link","React","Form","Input","Checkbox","Button","formItemLayout","labelCol","xs","span","sm","wrapperCol","tailFormItemLayout","offset","RegisterCard","form","useForm","onFinish","values","console","log","required","message","whitespace","type","getFieldValue","validator","_","value","Promise","resolve","reject","Error"],"mappings":"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","sourcesContent":["import { Link } from \"react-router-dom\";\r\nimport React from 'react';\r\nimport { Form, Input, Checkbox, Button } from 'antd';\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 8,\r\n    },\r\n  },\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n    },\r\n    sm: {\r\n      span: 16,\r\n    },\r\n  },\r\n};\r\nconst tailFormItemLayout = {\r\n  wrapperCol: {\r\n    xs: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n    sm: {\r\n      span: 24,\r\n      offset: 0,\r\n    },\r\n  },\r\n};\r\n\r\nconst RegisterCard = () => {\r\n   const [form] = Form.useForm();\r\n\r\n   const onFinish = (values) => {\r\n     console.log('Received values of form: ', values);\r\n   };\r\n \r\n   return (\r\n     <Form\r\n       {...formItemLayout}\r\n       form={form}\r\n       name=\"register\"\r\n       onFinish={onFinish}\r\n       className=\"register-form\"\r\n       scrollToFirstError\r\n     >\r\n       <Form.Item\r\n         name=\"name\"\r\n         label=\"Your Name\"\r\n         tooltip=\"What do you want others to call you?\"\r\n         rules={[\r\n           {\r\n             required: true,\r\n             message: \"Please input your name!\",\r\n             whitespace: true,\r\n           },\r\n         ]}\r\n       >\r\n         <Input />\r\n       </Form.Item>\r\n       <Form.Item\r\n         name=\"email\"\r\n         label=\"E-mail\"\r\n         rules={[\r\n           {\r\n             type: \"email\",\r\n             message: \"The input is not valid E-mail!\",\r\n           },\r\n           {\r\n             required: true,\r\n             message: \"Please input your E-mail!\",\r\n           },\r\n         ]}\r\n       >\r\n         <Input />\r\n       </Form.Item>\r\n\r\n       <Form.Item\r\n         name=\"password\"\r\n         label=\"Password\"\r\n         rules={[\r\n           {\r\n             required: true,\r\n             message: \"Please input your password!\",\r\n           },\r\n         ]}\r\n         hasFeedback\r\n       >\r\n         <Input.Password />\r\n       </Form.Item>\r\n\r\n       <Form.Item\r\n         name=\"rePassword\"\r\n         label=\"Re-enter Password\"\r\n         dependencies={[\"password\"]}\r\n         hasFeedback\r\n         rules={[\r\n           {\r\n             required: true,\r\n             message: \"Please re-enter your password!\",\r\n           },\r\n           ({ getFieldValue }) => ({\r\n             validator(_, value) {\r\n               if (!value || getFieldValue(\"password\") === value) {\r\n                 return Promise.resolve();\r\n               }\r\n\r\n               return Promise.reject(\r\n                 new Error(\"The two passwords that you entered do not match!\")\r\n               );\r\n             },\r\n           }),\r\n         ]}\r\n       >\r\n         <Input.Password />\r\n       </Form.Item>\r\n\r\n       <Form.Item\r\n         name=\"agreement\"\r\n         valuePropName=\"checked\"\r\n         rules={[\r\n           {\r\n             validator: (_, value) =>\r\n               value\r\n                 ? Promise.resolve()\r\n                 : Promise.reject(new Error(\"Should accept agreement\")),\r\n           },\r\n         ]}\r\n         {...tailFormItemLayout}\r\n       >\r\n         <Checkbox>\r\n           I have read the <Link to=\"\">agreement</Link>\r\n         </Checkbox>\r\n       </Form.Item>\r\n       <Form.Item {...tailFormItemLayout}>\r\n         <Button\r\n           type=\"primary\"\r\n           className=\"login-form__button\"\r\n           htmlType=\"submit\"\r\n         >\r\n           Create your account\r\n         </Button>\r\n         Already have an account?{\" \"}\r\n         <Link to={\"/login?redirect=shipping\"}>Login</Link>\r\n       </Form.Item>\r\n     </Form>\r\n   );\r\n};\r\nexport default RegisterCard;\r\n"]},"metadata":{},"sourceType":"module"}