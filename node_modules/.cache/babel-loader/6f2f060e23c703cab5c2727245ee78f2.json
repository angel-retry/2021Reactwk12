{"ast":null,"code":"import { SET_PAGE_TITLE, SET_PAGE_CONTENT, SET_NAVBAR_ACTIVEITEM, ADD_CART_ITEM, REMOVE_CART_ITEM, SET_PRODUCT_DETAIL, BEGIN_PRODUCTS_FEED, SUCCESS_PRODUCTS_FEED, FAIL_PRODUCTS_FEED, BEGIN_PRODUCTS_REQUEST, SUCCESS_PRODUCTS_REQUEST, FAIL_PRODUCTS_REQUEST } from \"../utils/constants\";\nimport { getProducts, getProductById, feedProducts } from \"../api\";\nexport const addCartItem = (dispatch, product, qty) => {\n  const item = {\n    id: product.id,\n    category: product.category,\n    name: product.name,\n    image: product.image,\n    price: product.price,\n    countInStock: product.countInStock,\n    qty\n  };\n  dispatch({\n    type: ADD_CART_ITEM,\n    payload: item\n  });\n};\nexport const removeCartItem = (dispatch, productId) => {\n  dispatch({\n    type: REMOVE_CART_ITEM,\n    payload: productId\n  });\n};\nexport const feedJSONToFirebase = async dispatch => {\n  dispatch({\n    type: BEGIN_PRODUCTS_FEED\n  });\n\n  try {\n    await feedProducts();\n    dispatch({\n      type: SUCCESS_PRODUCTS_FEED\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FAIL_PRODUCTS_FEED,\n      payload: error\n    });\n  }\n};\nexport const setProductDetail = async (dispatch, productId, qty) => {\n  dispatch({\n    type: BEGIN_PRODUCTS_REQUEST\n  });\n\n  try {\n    const product = await getProductById(productId);\n    if (qty === 0) dispatch({\n      type: SET_PRODUCT_DETAIL,\n      payload: {\n        product\n      }\n    });else dispatch({\n      type: SET_PRODUCT_DETAIL,\n      payload: {\n        product,\n        qty\n      }\n    });\n    dispatch({\n      type: SUCCESS_PRODUCTS_REQUEST\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FAIL_PRODUCTS_REQUEST,\n      payload: error\n    });\n  }\n};\nexport const setPage = async (dispatch, url, title) => {\n  let products = [];\n  dispatch({\n    type: BEGIN_PRODUCTS_REQUEST\n  });\n  dispatch({\n    type: SET_PAGE_TITLE,\n    payload: title\n  });\n\n  try {\n    products = await getProducts(url);\n    dispatch({\n      type: SET_PAGE_CONTENT,\n      payload: {\n        title,\n        products\n      }\n    });\n    dispatch({\n      type: SET_NAVBAR_ACTIVEITEM,\n      payload: url\n    });\n    dispatch({\n      type: SUCCESS_PRODUCTS_REQUEST\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: FAIL_PRODUCTS_REQUEST,\n      payload: error\n    });\n  }\n};","map":{"version":3,"sources":["F:/NTUE/109-2/進階前端/練習/wk12/src/actions/index.js"],"names":["SET_PAGE_TITLE","SET_PAGE_CONTENT","SET_NAVBAR_ACTIVEITEM","ADD_CART_ITEM","REMOVE_CART_ITEM","SET_PRODUCT_DETAIL","BEGIN_PRODUCTS_FEED","SUCCESS_PRODUCTS_FEED","FAIL_PRODUCTS_FEED","BEGIN_PRODUCTS_REQUEST","SUCCESS_PRODUCTS_REQUEST","FAIL_PRODUCTS_REQUEST","getProducts","getProductById","feedProducts","addCartItem","dispatch","product","qty","item","id","category","name","image","price","countInStock","type","payload","removeCartItem","productId","feedJSONToFirebase","error","console","log","setProductDetail","setPage","url","title","products"],"mappings":"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","sourcesContent":["import {\r\n  SET_PAGE_TITLE,\r\n  SET_PAGE_CONTENT,\r\n  SET_NAVBAR_ACTIVEITEM,\r\n  ADD_CART_ITEM,\r\n  REMOVE_CART_ITEM,\r\n  SET_PRODUCT_DETAIL,\r\n  BEGIN_PRODUCTS_FEED,\r\n  SUCCESS_PRODUCTS_FEED,\r\n  FAIL_PRODUCTS_FEED,\r\n  BEGIN_PRODUCTS_REQUEST,\r\n  SUCCESS_PRODUCTS_REQUEST,\r\n  FAIL_PRODUCTS_REQUEST,\r\n} from \"../utils/constants\";\r\nimport { getProducts, getProductById, feedProducts } from \"../api\";\r\n\r\nexport const addCartItem = (dispatch, product, qty) => {\r\n  const item = {\r\n    id: product.id,\r\n    category: product.category,\r\n    name: product.name,\r\n    image: product.image,\r\n    price: product.price,\r\n    countInStock: product.countInStock,\r\n    qty,\r\n  };\r\n  dispatch({\r\n    type: ADD_CART_ITEM,\r\n    payload: item,\r\n  });\r\n};\r\n\r\nexport const removeCartItem = (dispatch, productId) => {\r\n  dispatch({\r\n    type: REMOVE_CART_ITEM,\r\n    payload: productId,\r\n  });\r\n};\r\n\r\nexport const feedJSONToFirebase = async (dispatch) => {\r\n  dispatch({ type: BEGIN_PRODUCTS_FEED });\r\n  try {\r\n    await feedProducts();\r\n    dispatch({ type: SUCCESS_PRODUCTS_FEED });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: FAIL_PRODUCTS_FEED, payload: error });\r\n  }\r\n}\r\n\r\nexport const setProductDetail = async (dispatch, productId, qty) => {\r\n  dispatch({ type: BEGIN_PRODUCTS_REQUEST });\r\n  try {\r\n    const product = await getProductById(productId);\r\n    if (qty === 0)\r\n      dispatch({\r\n        type: SET_PRODUCT_DETAIL,\r\n        payload: {\r\n          product,\r\n        }\r\n      })\r\n    else\r\n      dispatch({\r\n        type: SET_PRODUCT_DETAIL,\r\n        payload: {\r\n          product,\r\n          qty,\r\n        }\r\n      })    \r\n    dispatch({ type: SUCCESS_PRODUCTS_REQUEST });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: FAIL_PRODUCTS_REQUEST, payload: error });\r\n  }\r\n}\r\n\r\nexport const setPage = async (dispatch, url, title) => {\r\n  let products = [];\r\n  dispatch({ type: BEGIN_PRODUCTS_REQUEST });\r\n  dispatch({\r\n    type: SET_PAGE_TITLE,\r\n    payload: title,\r\n  });\r\n  try {\r\n    products = await getProducts(url);\r\n    dispatch({\r\n      type: SET_PAGE_CONTENT,\r\n      payload: { title, products },\r\n    });\r\n    dispatch({\r\n      type: SET_NAVBAR_ACTIVEITEM,\r\n      payload: url,\r\n    });    \r\n    dispatch({ type: SUCCESS_PRODUCTS_REQUEST });\r\n  } catch (error) {\r\n    console.log(error);\r\n    dispatch({ type: FAIL_PRODUCTS_REQUEST, payload: error });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}